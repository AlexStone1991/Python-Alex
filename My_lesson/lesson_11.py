# TODO Знакомство с git и github. Урок 11

# Git
'''
git init - команда для инициализации репозитория. Создаёт скрытую папку .git в текущей директории.

git status - команда для просмотра статуса репозитория. Покажет изменения в файлах, которые не были добавлены в индекс.

git add - команда для добавления файлов в индекс. Файлы будут добавлены в индекс, в том виде, в котором они находятся в рабочей директории.

git commit -m "комментарий" - команда для создания коммита. Коммит - это фиксация изменений в репозитории.

## Указание юзернейма и почты

git config --global user.name "Ваше имя" - команда для указания юзернейма.
git config --global user.email "Ваша почта" - команда для указания почты.

--global - глобальный параметр.

## Переключение между коммитами

commit hash - уникальный идентификатор коммита. Выглядит как набор букв и цифр.
Примерно так: 4b825dc642cb6eb9a060e54bf8d69288fbee4904

Можно ореинтироваться на сокращенный вариант: 4b825dc (первые 7 символов).

Мы можем переключится на любой коммит, и проект физически вернется в то состояние, в котором он был в этот момент.

git checkout <commit hash> - команда для переключения между коммитами.

Важно не писать там код, иначе если вы его закоммитите, то будет комит
detached HEAD - оторванная голова)) - коммит без ветки.

Вернуться обратно лучше всего именно на ветку - что даст переключение к самому свежему коммиту ветки.
git checkout <branch name> - команда для переключения между ветками.

## Git log

git log - команда для просмотра истории коммитов. Даст список коммитов, отсортированных по дате. А так же подскажет где HEAD и на какой ветке он находится.

### Флаги

- --oneline - выводит список коммитов в одну строку.
- --graph - выводит список коммитов в виде графа.

git log --graph --pretty=format:'%C(yellow)%h%C(reset) %C(cyan)%d%C(reset) %C(green)(%cd) %C(bold blue)<%an>%C(reset)' --all --date=format:'%Y-%m-%d %H:%M:%S'

Описание: 
- --graph: показывает графическую репрезентацию веток и коммитов.
- --pretty=format:...: задает формат вывода с цветами и информацией о коммитах.
- --all: показывает историю всех веток.
- --date=format:'...': форматирует дату.

### С относительной датой (например, 2 дня назад)
- Команда:
    git log --graph --pretty=format:'%C(yellow)%h%C(reset) %C(cyan)%d%C(reset) %C(green)(%ar) %C(bold blue)<%an>%C(reset)' --all
  
  Описание: Аналогично предыдущей команде, но показывает относительную дату коммита.

## Git diff
git diff - команда для просмотра изменений в файлах.
git diff <commit hash 1> <commit hash 2> - команда для просмотра изменений между двумя коммитами.
'''