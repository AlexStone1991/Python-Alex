# TODO Срезы строк. Циклы. Списки. Урок 5

# AGE = 18

# IS_ADULT = "Вы совершеннолетний" if AGE >= 18 else "Вы несовершеннолетний"

# print(IS_ADULT) if AGE >= 18 else print("Вы несовершеннолетний")

# if AGE >= 18:
#     print("Вы совершеннолетний")
# else:
#     print("Вы несовершеннолетний")

# Проверка на сложность пароля
#  больше 8 символов и больше 2 букв r любой регистр

user_password = "qw er"

# if len(user_password) >= 8:
#     if user_password.lower().count("r") >= 2:
#         # print("Пароль сложный")
#         if not " " in user_password:
#             print("В пароле нет пробелов и он хороший")
#         else:
#             print("В пароле есть пробелы")
#     else:
#         print("В пароле должно быть больше букв r")
# else:
#     print("Пароль короткий")


# report_string = ""

# if not len(user_password) >= 8:
#     report_string += "Пароль короткий\n"

# if not user_password.lower().count("r") >= 2:
#     report_string += "В пароле должно быть больше букв r\n"

# if " " in user_password:
#     report_string += "В пароле есть пробелы\n"

# # время печатать отчет
# print("Ваш пароль хорший") if not report_string else print(report_string)



# Строка - неизменная, упорядоченная последовательно символов
# Индекс- пощиция символа в строке
# Индексы в Python начинаются с 0

# print(string[0])
# print(string[1])

# last_index = len(string) - 1
# print(string[last_index])

# print(string[-1])

# print(string[0] + string[1] + string[2])

# # Срезы [начало: конец: шаг] [start:stop:step]

# print(string[::])  # ��ерез два символа
# print(string[0:6:1]) #Ехал Ф
# print(string[0:6]) #Ехал Ф
# print(string[:6]) #Ехал Ф

# # Поработаем с шагом
# print(string[::2]) #Еа ео ее еувдтФдрврк а,рк.
# print(string[::-1]) #...кар ,кар екер в родеФ тидив укер зереч родеФ лахЕ

#  Палиндром - слово, которые читается одинаково с начала и с конца

"""
дед, топот, довод, казак, шалаш, аргентина манит негра, а роза упала на лапу азора
"""



# 1. Пользователь вводит строку
# 2. Вы через срез string[::-1] сверяем является ли строка палиндромом
# с учетом регистра, и убрав пробелы .lower().replace(" ", "")
# 3. Вернуть ответ пользователю

palindromes = [
    "А роза упала на лапу Азора",
    "Аргенина манит негра",
    "Я иду с мечем судия",
    "Леша на полке клопа нашел",
    "Искать такси",
    "Аргентина манит негра, а тот ловит негра, а негр там манит аргентинца",
    "Нажал кабан на баклажан",
    "Город дорог",
    "Тот кот",
    "А баба",
    "Шаг шагнул на шар, а шар на шаг шагнул",
    "Мадам, я - Адам!",
    "Ешь немажь жаменше!",
    "Мы, сомы, летели в осьмым",
    "На в лоб, болван!",
    "Тащи в ущелье лещу вищат",
    "Я не реву - уверен я",
    "Утоп в поту",
]

# user_input = input("Введите строку: ")

# is_palindrome = user_input.lower().replace(" ", "") == user_input.lower().replace(" ", "")[::-1]

# print(f"Строка '{user_input}' {'является' if is_palindrome else 'не является'} палиндромом")

# проверка на количество гласных и согласных и сколько слов в строке
string = "Ехал Федор через реку видит Федор в реке рак, рак..."

# Строка с гласными
vowels = "аеёиоуыэюя"
# Строка с согласными
consonants = "бвгджзйклмнпрстфхцчшщ"

vowels_count = 0
consonants_count = 0
words_count = 1

for letter in string:
    if letter in vowels:
        vowels_count += 1
    elif letter in consonants:
        consonants_count += 1
    elif letter == " ":
        words_count += 1

print(f"В строке {string} гласных букв - {vowels_count}, согласных - {consonants_count}, слов - {words_count}")

# списки. Упорядоченная изменяемая коллекция
# спски имеют индексы. Индексы начинаются с 0
# Поддерживают срезы. Элементы списка могут быть любых типов данных

# Пустой список
my_listt = []

my_list = list()

my_list = [1, "Федор", 3.14, True, None, [1, 2, 3]]

# .split() - разделит строку на список по пробелу, или по любому другому символу
# .join() - объединяет список в строку

# "++".join(list) - обьеденяет список в строку с указанным разделителем

fedor_list = string.split()
words_count = len(fedor_list)
print(fedor_list) # ['Ехал', 'Федор', 'через', 'реку', 'видит', 'Федор', 'в', 'реке', 'рак,', 'рак...']

fedor_string = "++".join(fedor_list)
print(fedor_string) # Ехал++Федор++через++реку++видит++Федор++в++реке++рак,++рак...

# Практика что посмотрим сегодня. Split Choise.

# получаем от пользователя ст через зяпятую с фильмами
# разбераем строку на список с указанием альтернативного разделителя Split()
# Выведите на экран список фильмов
# 4. Получите рандомный элемент списка через random.choice()
# import random
# random.choice(my_list)
# 5. Выведите на экран выбранный фильмвыведите

from random import random

user_input = input("Введите фильмы через запятую: ").split(",")

